name: build-image

on:
  push:
    branches:
      - 'main'
      - 'develop'

jobs:

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download and Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-4.8.0.2856-linux sonar-scanner
        shell: bash

      - name: Add SonarScanner to PATH
        run: echo "${{ github.workspace }}/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarCloud Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=container-technologies-and-devsecops \
            -Dsonar.organization=leosilvasouza \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -X  # Modo debug ativado
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}

  build-image:
    runs-on: ubuntu-latest
    needs: code-analysis
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Calculate version
        id: calculate-version
        uses: bitshifted/git-auto-semver@v1

      - name: Use version
        run: echo "Calculated version:v${{ steps.calculate-version.outputs.version-string }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: List files
        run: ls -lha

      - name: Build an image from Dockerfile
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/container-technologies:v${{ steps.calculate-version.outputs.version-string }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/container-technologies:v${{ steps.calculate-version.outputs.version-string }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push image
        run: |
          docker image push ${{ secrets.DOCKERHUB_USERNAME }}/container-technologies:v${{ steps.calculate-version.outputs.version-string }}

      - name: Open Pull Request
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: develop
          target_branch: main
          title: Automatic Pull Request
          body: "This is an automatic pull request from the develop branch."
          labels: |
            - enhancement
            - auto-pr
          draft: false
          allow_no_diff: false
